package TresEnRaya;

import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import javax.swing.ImageIcon;
import javax.swing.JButton;

/**
 *
 * @author Antonio DÃ­az
 */

public class TresEnRaya extends javax.swing.JFrame {
    private final int matrizCasillas[][] = new int [3][3];
    private String turno = "X"; //Siempre empieza la X
    private final int matrizGanador[][] = new int [3][3];
    private int ganadasX = 0;
    private int ganadasO = 0;
    
    
    public TresEnRaya() {
        initComponents();
        setSize(800,800);
        setLocationRelativeTo(null);
        llenarMatrizCasillas();       
    }
    
    private void llenarMatrizCasillas(){ //Esta matriz la usamos para saber si una casilla esta ocupada o libre
        for (int i=0;i<3;i++){
            for (int j=0;j<3;j++){
                matrizCasillas[i][j] = 0;
            }
        }
    }
    
    private void llenarMatrizGanador(){ //Esta matriz la usamos para comprobar en cada click el ganador de la partida
        for (int i=0;i<3;i++){
            for (int j=0;j<3;j++){
                matrizGanador[i][j] = 0;
            }
        }
    }
    
    private void setX(JButton casilla){ 
        casilla.setIcon(new ImageIcon(getClass().getResource("/Imagenes/X.png")));
    }
    
    private void setO(JButton casilla){
        casilla.setIcon(new ImageIcon(getClass().getResource("/Imagenes/O.png")));
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Canvas = new javax.swing.JPanel();
        casilla00 = new javax.swing.JButton();
        casilla01 = new javax.swing.JButton();
        casilla02 = new javax.swing.JButton();
        casilla10 = new javax.swing.JButton();
        casilla11 = new javax.swing.JButton();
        casilla12 = new javax.swing.JButton();
        casilla20 = new javax.swing.JButton();
        casilla21 = new javax.swing.JButton();
        casilla22 = new javax.swing.JButton();
        Score = new javax.swing.JPanel();
        resultadoX = new javax.swing.JLabel();
        resultadoO = new javax.swing.JLabel();
        labelTurno = new javax.swing.JLabel();
        barraMenu = new javax.swing.JMenuBar();
        menuOpciones = new javax.swing.JMenu();
        reiniciar = new javax.swing.JMenuItem();
        reiniciarResultados = new javax.swing.JMenuItem();
        salir = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(java.awt.Color.black);

        Canvas.setBackground(new java.awt.Color(0, 0, 0));
        Canvas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Canvas.setLayout(new java.awt.GridLayout(3, 3, 3, 3));

        casilla00.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        casilla00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casilla00ActionPerformed(evt);
            }
        });
        Canvas.add(casilla00);

        casilla01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casilla01ActionPerformed(evt);
            }
        });
        Canvas.add(casilla01);

        casilla02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casilla02ActionPerformed(evt);
            }
        });
        Canvas.add(casilla02);

        casilla10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casilla10ActionPerformed(evt);
            }
        });
        Canvas.add(casilla10);

        casilla11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casilla11ActionPerformed(evt);
            }
        });
        Canvas.add(casilla11);

        casilla12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casilla12ActionPerformed(evt);
            }
        });
        Canvas.add(casilla12);

        casilla20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casilla20ActionPerformed(evt);
            }
        });
        Canvas.add(casilla20);

        casilla21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casilla21ActionPerformed(evt);
            }
        });
        Canvas.add(casilla21);

        casilla22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casilla22ActionPerformed(evt);
            }
        });
        Canvas.add(casilla22);

        Score.setBackground(new java.awt.Color(0, 204, 204));
        Score.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        Score.setLayout(new javax.swing.BoxLayout(Score, javax.swing.BoxLayout.Y_AXIS));

        resultadoX.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resultadoX.setText("X = 0");
        resultadoX.setAlignmentX(0.5F);
        Score.add(resultadoX);

        resultadoO.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resultadoO.setText("O = 0");
        resultadoO.setAlignmentX(0.5F);
        Score.add(resultadoO);

        labelTurno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelTurno.setText("Turno: X");
        labelTurno.setAlignmentX(0.5F);
        Score.add(labelTurno);

        barraMenu.setBackground(new java.awt.Color(204, 204, 204));
        barraMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        barraMenu.setForeground(new java.awt.Color(204, 204, 204));
        barraMenu.setToolTipText("");

        menuOpciones.setText("Opciones");

        reiniciar.setText("Volver a empezar");
        reiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reiniciarActionPerformed(evt);
            }
        });
        menuOpciones.add(reiniciar);

        reiniciarResultados.setText("Reiniciar resultados");
        reiniciarResultados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reiniciarResultadosActionPerformed(evt);
            }
        });
        menuOpciones.add(reiniciarResultados);

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        menuOpciones.add(salir);

        barraMenu.add(menuOpciones);

        menuAyuda.setText("Ayuda");
        menuAyuda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuAyudaMouseClicked(evt);
            }
        });
        barraMenu.add(menuAyuda);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Canvas, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
            .addComponent(Score, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Canvas, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Score, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salirActionPerformed

    private void casilla00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casilla00ActionPerformed
        if (matrizCasillas[0][0]==0){
            if(turno.equals("X")){
                setX(casilla00);
                matrizGanador[0][0]=1;
                turno = "O";
                labelTurno.setText("Turno: "+turno);
            }
            else{
                setO(casilla00);
                matrizGanador[0][0]=2;
                turno = "X";
                labelTurno.setText("Turno: "+turno);
            }
            matrizCasillas[0][0]=1;
            comprobarGanador();
        }
    }//GEN-LAST:event_casilla00ActionPerformed

    private void casilla01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casilla01ActionPerformed
        if (matrizCasillas[0][1]==0){
            if(turno.equals("X")){
                setX(casilla01);
                matrizGanador[0][1]=1;
                turno = "O";
                labelTurno.setText("Turno: "+turno);
            }
            else{
                setO(casilla01);
                matrizGanador[0][1]=2;
                turno = "X";
                labelTurno.setText("Turno: "+turno);
            }
            matrizCasillas[0][1]=1;
            comprobarGanador();
        }
    }//GEN-LAST:event_casilla01ActionPerformed

    private void casilla02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casilla02ActionPerformed
        if (matrizCasillas[0][2]==0){
            if(turno.equals("X")){
                setX(casilla02);
                matrizGanador[0][2]=1;
                turno = "O";
                labelTurno.setText("Turno: "+turno);
            }
            else{
                setO(casilla02);
                matrizGanador[0][2]=2;
                turno = "X";
                labelTurno.setText("Turno: "+turno);
            }
            matrizCasillas[0][2]=1;
            comprobarGanador();
        }
    }//GEN-LAST:event_casilla02ActionPerformed

    private void casilla10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casilla10ActionPerformed
        if (matrizCasillas[1][0]==0){
            if(turno.equals("X")){
                setX(casilla10);
                matrizGanador[1][0]=1;
                turno = "O";
                labelTurno.setText("Turno: "+turno);
            }
            else{
                setO(casilla10);
                matrizGanador[1][0]=2;
                turno = "X";
                labelTurno.setText("Turno: "+turno);
            }
            matrizCasillas[1][0]=1;
            comprobarGanador();
        }
    }//GEN-LAST:event_casilla10ActionPerformed

    private void casilla11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casilla11ActionPerformed
        if (matrizCasillas[1][1]==0){
            if(turno.equals("X")){
                setX(casilla11);
                matrizGanador[1][1]=1;
                turno = "O";
                labelTurno.setText("Turno: "+turno);
            }
            else{
                setO(casilla11);
                matrizGanador[1][1]=2;
                turno = "X";
                labelTurno.setText("Turno: "+turno);
            }
            matrizCasillas[1][1]=1;
            comprobarGanador();
        }
    }//GEN-LAST:event_casilla11ActionPerformed

    private void casilla12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casilla12ActionPerformed
        if (matrizCasillas[1][2]==0){
            if(turno.equals("X")){
                setX(casilla12);
                matrizGanador[1][2]=1;
                turno = "O";
                labelTurno.setText("Turno: "+turno);
            }
            else{
                setO(casilla12);
                matrizGanador[1][2]=2;
                turno = "X";
                labelTurno.setText("Turno: "+turno);
            }
            matrizCasillas[1][2]=1;
            comprobarGanador();
        }
    }//GEN-LAST:event_casilla12ActionPerformed

    private void casilla20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casilla20ActionPerformed
        if (matrizCasillas[2][0]==0){
            if(turno.equals("X")){
                setX(casilla20);
                matrizGanador[2][0]=1;
                turno = "O";
                labelTurno.setText("Turno: "+turno);
            }
            else{
                setO(casilla20);
                matrizGanador[2][0]=2;
                turno = "X";
                labelTurno.setText("Turno: "+turno);
            }
            matrizCasillas[2][0]=1;
            comprobarGanador();
        }
    }//GEN-LAST:event_casilla20ActionPerformed

    private void casilla21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casilla21ActionPerformed
        if (matrizCasillas[2][1]==0){
            if(turno.equals("X")){
                setX(casilla21);
                matrizGanador[2][1]=1;
                turno = "O";
                labelTurno.setText("Turno: "+turno);
            }
            else{
                setO(casilla21);
                matrizGanador[2][1]=2;
                turno = "X";
                labelTurno.setText("Turno: "+turno);
            }
            matrizCasillas[2][1]=1;
            comprobarGanador();
        }
    }//GEN-LAST:event_casilla21ActionPerformed

    private void casilla22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casilla22ActionPerformed
        if (matrizCasillas[2][2]==0){
            if(turno.equals("X")){
                setX(casilla22);
                matrizGanador[2][2]=1;
                turno = "O";
                labelTurno.setText("Turno: "+turno);
            }
            else{
                setO(casilla22);
                matrizGanador[2][2]=2;
                turno = "X";
                labelTurno.setText("Turno: "+turno);
            }
            matrizCasillas[2][2]=1;
            comprobarGanador();
        }
    }//GEN-LAST:event_casilla22ActionPerformed

    private void reiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reiniciarActionPerformed
        volverAEmpezar();
    }//GEN-LAST:event_reiniciarActionPerformed

    private void menuAyudaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAyudaMouseClicked
        try {
            Desktop.getDesktop().browse(new URI("https://es.wikipedia.org/wiki/Tres_en_l%C3%ADnea"));
            } catch (IOException | URISyntaxException ex) {
            }
    }//GEN-LAST:event_menuAyudaMouseClicked

    private void reiniciarResultadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reiniciarResultadosActionPerformed
        ganadasX = 0;
        resultadoX.setText("X = "+ganadasX);
        ganadasO = 0;
        resultadoO.setText("O = "+ganadasO);
    }//GEN-LAST:event_reiniciarResultadosActionPerformed

    private void comprobarGanador(){
        boolean ganadorX = false;
        boolean ganadorO = false;
        int casoEmpate = 0;
        //Comprobamos si ganan X
        ganadorX = comprobarMatrizGanador(1);
        
        //Comprobamos si ganan O
        ganadorO = comprobarMatrizGanador(2);
        
        if(ganadorX == true){ //Si ganan las X
            ganadasX++;
            resultadoX.setText("X = "+ganadasX);
            labelTurno.setText("Â¡Ganan X!");
            for (int i=0;i<3;i++){
                for (int j=0;j<3;j++){
                matrizCasillas[i][j] = 1;
                }
            }
            
        }
        else if(ganadorO == true){ //Si ganan los O
            ganadasO++;
            resultadoO.setText("O = "+ganadasO);
            labelTurno.setText("Â¡Ganan O!");
            for (int i=0;i<3;i++){
                for (int j=0;j<3;j++){
                matrizCasillas[i][j] = 1;
                }
            }
        }
        else{ //Si se empata
            for (int i=0;i<3;i++){
                for (int j=0;j<3;j++){
                    if (matrizGanador[i][j]!=0){
                        casoEmpate++;
                    }
                    
                }
            }
            if(casoEmpate==9){
                labelTurno.setText("Â¡Empate! Vuelve a empezar");
            }
            else{
                casoEmpate=0;
            }
        }
   
    }
    
    private boolean comprobarMatrizGanador(int num){ //Comprueba todas las posibles opciones de ganar, si encuentra una, deja visibles solo aquellas posiciones en las que se ha conseguido tres en raya. 
        boolean ganador = false;
        if (matrizGanador[0][0] == num && matrizGanador[0][1] == num && matrizGanador[0][2] == num){
            casilla10.setIcon(null);
            casilla11.setIcon(null);
            casilla12.setIcon(null);
            casilla20.setIcon(null);
            casilla21.setIcon(null);
            casilla22.setIcon(null);
            ganador = true;
        }
        else if(matrizGanador[1][0] == num && matrizGanador[1][1] == num && matrizGanador[1][2] == num){
            casilla00.setIcon(null);
            casilla01.setIcon(null);
            casilla02.setIcon(null);
            casilla20.setIcon(null);
            casilla21.setIcon(null);
            casilla22.setIcon(null);
            ganador = true;
        }
        else if(matrizGanador[2][0] == num && matrizGanador[2][1] == num && matrizGanador[2][2] == num){
            casilla00.setIcon(null);
            casilla01.setIcon(null);
            casilla02.setIcon(null);
            casilla10.setIcon(null);
            casilla11.setIcon(null);
            casilla12.setIcon(null);
            ganador = true;
        }
        else if(matrizGanador[0][0] == num && matrizGanador[1][0] == num && matrizGanador[2][0] == num){
            casilla01.setIcon(null);
            casilla02.setIcon(null);
            casilla11.setIcon(null);
            casilla12.setIcon(null);
            casilla21.setIcon(null);
            casilla22.setIcon(null);
            ganador = true;
        }
        else if(matrizGanador[0][1] == num && matrizGanador[1][1] == num && matrizGanador[2][1] == num){
            casilla00.setIcon(null);
            casilla02.setIcon(null);
            casilla10.setIcon(null);
            casilla12.setIcon(null);
            casilla20.setIcon(null);
            casilla22.setIcon(null);
            ganador = true;
        }
        else if(matrizGanador[0][2] == num && matrizGanador[1][2] == num && matrizGanador[2][2] == num){
            casilla00.setIcon(null);
            casilla01.setIcon(null);
            casilla10.setIcon(null);
            casilla11.setIcon(null);
            casilla20.setIcon(null);
            casilla21.setIcon(null);
            ganador = true;
        }
        else if(matrizGanador[0][0] == num && matrizGanador[1][1] == num && matrizGanador[2][2] == num){
            casilla01.setIcon(null);
            casilla02.setIcon(null);
            casilla10.setIcon(null);
            casilla12.setIcon(null);
            casilla20.setIcon(null);
            casilla21.setIcon(null);
            ganador = true;
        }
        else if(matrizGanador[0][2] == num && matrizGanador[1][1] == num && matrizGanador[2][0] == num){
            casilla00.setIcon(null);
            casilla01.setIcon(null);
            casilla10.setIcon(null);
            casilla12.setIcon(null);
            casilla21.setIcon(null);
            casilla22.setIcon(null);
            ganador = true;
        }
        return ganador;    
    }
    
    private void volverAEmpezar(){
        llenarMatrizCasillas();
        llenarMatrizGanador();
        turno = "X";
        labelTurno.setText("Turno: "+turno);
        
        
        casilla00.setIcon(null);
        casilla01.setIcon(null);
        casilla02.setIcon(null);
        casilla10.setIcon(null);
        casilla11.setIcon(null);
        casilla12.setIcon(null);
        casilla20.setIcon(null);
        casilla21.setIcon(null);
        casilla22.setIcon(null);
        
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | NullPointerException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TresEnRaya.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TresEnRaya().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Canvas;
    private javax.swing.JPanel Score;
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JButton casilla00;
    private javax.swing.JButton casilla01;
    private javax.swing.JButton casilla02;
    private javax.swing.JButton casilla10;
    private javax.swing.JButton casilla11;
    private javax.swing.JButton casilla12;
    private javax.swing.JButton casilla20;
    private javax.swing.JButton casilla21;
    private javax.swing.JButton casilla22;
    private javax.swing.JLabel labelTurno;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenu menuOpciones;
    private javax.swing.JMenuItem reiniciar;
    private javax.swing.JMenuItem reiniciarResultados;
    private javax.swing.JLabel resultadoO;
    private javax.swing.JLabel resultadoX;
    private javax.swing.JMenuItem salir;
    // End of variables declaration//GEN-END:variables
}
